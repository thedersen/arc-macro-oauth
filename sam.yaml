AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Exported by architect/package@2.0.0-RC.0 on 2020-07-08T19:36:11.545Z
Resources:
  HTTP:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      DefinitionBody:
        openapi: 3.0.1
        info:
          title:
            Ref: AWS::StackName
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations
                connectionType: INTERNET
          /secure:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSecure.Arn}/invocations
                connectionType: INTERNET
          /secure/{foo}:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSecureFoo.Arn}/invocations
                connectionType: INTERNET
          /$default:
            x-amazon-apigateway-any-method:
              isDefaultRoute: true
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations
                connectionType: INTERNET
          /_static/{proxy+}:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '1.0'
                type: http_proxy
                httpMethod: GET
                uri:
                  Fn::Sub:
                  - http://${bukkit}.s3.${AWS::Region}.amazonaws.com/{proxy}
                  - bukkit:
                      Ref: StaticBucket
                connectionType: INTERNET
                timeoutInMillis: 30000
                requestParameters:
                  integration.request.path.proxy: method.request.path.proxy
  GetIndex:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://auth0-cfn-deployments-6505f/d633364d32cb18771452cc5d9053954c
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: auth0
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          OAUTH_CLIENT_ID: kY7oOmZrUNuQciFk1o46e5jefKHnKTLM
          OAUTH_CLIENT_SECRET: ddeD8t7fxySlwYy9xuis6xtqcQDfUy-yEZxD8jFZEA3Z3m0arLDzXBZRRQGklYoq
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetIndexEvent:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId:
              Ref: HTTP
  GetSecure:
    Type: AWS::Serverless::Function
    Properties:
      Handler: login-handler.handler
      CodeUri: s3://auth0-cfn-deployments-6505f/d9aac3c7bfc24effeb08abaec7df4cde
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: auth0
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          PERMISSION_CLAIM: https://jwt.alesundkristnesenter.no/permissions
          LOGIN_PERMISSIONS: access:admin2
          OAUTH_CLIENT_ID: kY7oOmZrUNuQciFk1o46e5jefKHnKTLM
          OAUTH_CLIENT_SECRET: ddeD8t7fxySlwYy9xuis6xtqcQDfUy-yEZxD8jFZEA3Z3m0arLDzXBZRRQGklYoq
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetSecureEvent:
          Type: HttpApi
          Properties:
            Path: /secure
            Method: GET
            ApiId:
              Ref: HTTP
  GetSecureFoo:
    Type: AWS::Serverless::Function
    Properties:
      Handler: login-handler.handler
      CodeUri: s3://auth0-cfn-deployments-6505f/2605cebe7e777c92e964e2ed2273fc25
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: auth0
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          PERMISSION_CLAIM: https://jwt.alesundkristnesenter.no/permissions
          LOGIN_PERMISSIONS: access:admin
          OAUTH_CLIENT_ID: kY7oOmZrUNuQciFk1o46e5jefKHnKTLM
          OAUTH_CLIENT_SECRET: ddeD8t7fxySlwYy9xuis6xtqcQDfUy-yEZxD8jFZEA3Z3m0arLDzXBZRRQGklYoq
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetSecureFooEvent:
          Type: HttpApi
          Properties:
            Path: /secure/{foo}
            Method: GET
            ApiId:
              Ref: HTTP
  InvokeDefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: GetIndex
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/*
        - ApiId:
            Ref: HTTP
  StaticBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ArcGlobalPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: arn:aws:logs:*:*:*
  GetOAuth:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://auth0-cfn-deployments-6505f/2ecc635c5dc83f7f4e939e4fc199302b
      Runtime: nodejs12.x
      MemorySize: 512
      Timeout: 5
      Environment:
        Variables:
          ARC_ROLE:
            Ref: Role
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_APP_NAME: auth0
          ARC_HTTP: aws_proxy
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          OAUTH_DOMAIN: aaks.eu.auth0.com
          OAUTH_AUDIENCE: https://*-api.alesundkristnesenter.no
          OAUTH_SCOPE: openid profile email
          OAUTH_CALLBACK_URL: https://o4qjrk73ha.execute-api.eu-central-1.amazonaws.com/auth/callback
          OAUTH_LOGOUT_REDIRECT: /
          OAUTH_ERROR_REDIRECT: /
          OAUTH_CLIENT_ID: kY7oOmZrUNuQciFk1o46e5jefKHnKTLM
          OAUTH_CLIENT_SECRET: ddeD8t7fxySlwYy9xuis6xtqcQDfUy-yEZxD8jFZEA3Z3m0arLDzXBZRRQGklYoq
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetLoginEvent:
          Type: HttpApi
          Properties:
            Path: /auth/{path}
            Method: GET
            ApiId:
              Ref: HTTP
Outputs:
  API:
    Description: API Gateway (HTTP)
    Value:
      Fn::Sub:
      - https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com
      - ApiId:
          Ref: HTTP
  ApiId:
    Description: API ID (ApiId)
    Value:
      Ref: HTTP
  BucketURL:
    Description: Bucket URL
    Value:
      Fn::Sub:
      - http://${bukkit}.s3-website-${AWS::Region}.amazonaws.com
      - bukkit:
          Ref: StaticBucket
